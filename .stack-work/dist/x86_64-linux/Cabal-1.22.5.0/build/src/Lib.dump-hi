
==================== FINAL INTERFACE ====================
2016-02-05 17:50:40.253623 UTC

interface schem_JKJnTqsSGsY8xQJBR5BvwX:Lib 7103
  interface hash: 6af1fce75018488bdf3454cc31f64e8d
  ABI hash: 75ba6aac906648a21b06432648397a65
  export-list hash: 9c8bb576a0e08885efa2123d24e71e93
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 962af636f8e927040c7daa9c21457292
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.entry
module dependencies:
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0* binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      parsec-3.1.9@parse_EE5NO1mlYLh4J8mgDEshNv
                      text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text
         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text.Lazy
         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text.Show
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text
                         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text.Lazy
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:Data.Char c8f827952d4111ae2e47c0b105217cdb
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Numeric 7a5febcdaefe4560a31129dafeb9ee43
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.Environment ba6e36000c8274703cf7786fbe8d0f6c
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  base-4.8.2.0:Text.Read ef0ef92fb7358ae94bab089940adfd2a
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  integer-gmp-1.0.0.0:GHC.Integer.Type 371e90fe753f08ddedf0d2657a9ef5c4
import  -/  parsec-3.1.9@parse_EE5NO1mlYLh4J8mgDEshNv:Text.Parsec.Char 33833b4e5a456df3fdf5e424b54aa7be
import  -/  parsec-3.1.9@parse_EE5NO1mlYLh4J8mgDEshNv:Text.Parsec.Combinator 52beab601620f232928106091a07f104
import  -/  parsec-3.1.9@parse_EE5NO1mlYLh4J8mgDEshNv:Text.Parsec.Prim 9a16fd2cccc277f049b5fc83feb3513a
import  -/  parsec-3.1.9@parse_EE5NO1mlYLh4J8mgDEshNv:Text.Parsec.String 9231f0ea74c16fedc3c0021eb564e3b0
import  -/  parsec-3.1.9@parse_EE5NO1mlYLh4J8mgDEshNv:Text.ParserCombinators.Parsec c1656581d384831fa444c0620ba9eb48
b3dfc5193807478eee96cdd2332d6caf
  $fShowLispVal :: GHC.Show.Show Lib.LispVal
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.LispVal
                  Lib.$fShowLispVal_$cshowsPrec
                  Lib.$fShowLispVal_$cshow
                  Lib.$fShowLispVal_$cshowList -}
b3dfc5193807478eee96cdd2332d6caf
  $fShowLispVal1 :: Lib.LispVal -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: Lib.LispVal -> Lib.$w$cshowsPrec 0 w) -}
b3dfc5193807478eee96cdd2332d6caf
  $fShowLispVal_$cshow :: Lib.LispVal -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x2 :: Lib.LispVal ->
                 Lib.$fShowLispVal_$cshowsPrec
                   GHC.Show.shows18
                   x2
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b3dfc5193807478eee96cdd2332d6caf
  $fShowLispVal_$cshowList :: [Lib.LispVal] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.LispVal
                   Lib.$fShowLispVal1) -}
b3dfc5193807478eee96cdd2332d6caf
  $fShowLispVal_$cshowsPrec ::
    GHC.Types.Int -> Lib.LispVal -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w2 :: Lib.LispVal ->
                 case w of ww { GHC.Types.I# ww2 -> Lib.$w$cshowsPrec ww2 w2 }) -}
b3dfc5193807478eee96cdd2332d6caf
  $w$cshowsPrec :: GHC.Prim.Int# -> Lib.LispVal -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
b3dfc5193807478eee96cdd2332d6caf
  data LispVal
    = Atom GHC.Base.String
    | List [Lib.LispVal]
    | DottedList [Lib.LispVal] Lib.LispVal
    | Number GHC.Integer.Type.Integer
    | Float GHC.Types.Float
    | String GHC.Base.String
    | Char GHC.Types.Char
    | Bool GHC.Types.Bool
d741c028b164ef8cc85801ead061fefb
  entry :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.entry1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
e5957d5252387086c5e26db5cf2dc9eb
  entry1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (case (Text.Parsec.Prim.runPT
                            @ GHC.Base.String
                            @ ()
                            @ Data.Functor.Identity.Identity
                            @ Lib.LispVal
                            @ GHC.Types.Char
                            (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                            Lib.entry3
                              `cast`
                            (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                                      <GHC.Base.String>_R
                                      <()>_R
                                      <Data.Functor.Identity.Identity>_R
                                      <Lib.LispVal>_R))
                            GHC.Tuple.()
                            Lib.entry2
                            (GHC.List.head @ GHC.Base.String ipv1))
                           `cast`
                         (Data.Functor.Identity.NTCo:Identity[0]
                              <Data.Either.Either
                                 Text.Parsec.Error.ParseError Lib.LispVal>_R) of wild {
                      Data.Either.Left err
                      -> GHC.CString.unpackAppendCString#
                           "No match: "#
                           (Text.Parsec.Error.$fShowParseError_$cshow err)
                      Data.Either.Right val
                      -> GHC.CString.unpackAppendCString#
                           "Found value: "#
                           (Lib.$w$cshowsPrec 0 val (GHC.Types.[] @ GHC.Types.Char)) })
                   GHC.Types.True
                   ipv }) -}
d52d3f84e4a7ab61d7c83ee681682464
  entry2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "lisp"#) -}
d38faed84131d1b6a757e826182616ad
  entry3 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (Lib.LispVal
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Lib.LispVal
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
instance GHC.Show.Show [Lib.LispVal] = Lib.$fShowLispVal
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

